// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: dbtesterpb/database_id.proto

package dbtesterpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// DatabaseID differentiates between major or minor releases (possibly different APIs)
// of each database. Make sure to make accordingn changes in 'flag_*' whenever an ID
// is added/removed.
type DatabaseID int32

const (
	// https://github.com/coreos/etcd/releases
	DatabaseID_etcd__tip  DatabaseID = 0
	DatabaseID_etcd__v3_2 DatabaseID = 1
	DatabaseID_etcd__v3_3 DatabaseID = 2
	// https://zookeeper.apache.org/releases.html
	DatabaseID_zookeeper__r3_5_3_beta DatabaseID = 100
	// https://github.com/hashicorp/consul/releases
	DatabaseID_consul__v0_8_4 DatabaseID = 200
	// https://github.com/coreos/zetcd/releases
	DatabaseID_zetcd__beta DatabaseID = 300
	// https://github.com/coreos/cetcd/releases
	DatabaseID_cetcd__beta DatabaseID = 400
)

var DatabaseID_name = map[int32]string{
	0:   "etcd__tip",
	1:   "etcd__v3_2",
	2:   "etcd__v3_3",
	100: "zookeeper__r3_5_3_beta",
	200: "consul__v0_8_4",
	300: "zetcd__beta",
	400: "cetcd__beta",
}
var DatabaseID_value = map[string]int32{
	"etcd__tip":              0,
	"etcd__v3_2":             1,
	"etcd__v3_3":             2,
	"zookeeper__r3_5_3_beta": 100,
	"consul__v0_8_4":         200,
	"zetcd__beta":            300,
	"cetcd__beta":            400,
}

func (x DatabaseID) String() string {
	return proto.EnumName(DatabaseID_name, int32(x))
}
func (DatabaseID) EnumDescriptor() ([]byte, []int) { return fileDescriptorDatabaseId, []int{0} }

func init() {
	proto.RegisterEnum("dbtesterpb.DatabaseID", DatabaseID_name, DatabaseID_value)
}

func init() { proto.RegisterFile("dbtesterpb/database_id.proto", fileDescriptorDatabaseId) }

var fileDescriptorDatabaseId = []byte{
	// 226 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x49, 0x49, 0x2a, 0x49,
	0x2d, 0x2e, 0x49, 0x2d, 0x2a, 0x48, 0xd2, 0x4f, 0x49, 0x2c, 0x49, 0x4c, 0x4a, 0x2c, 0x4e, 0x8d,
	0xcf, 0x4c, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x42, 0xc8, 0x4a, 0xe9, 0xa6, 0x67,
	0x96, 0x64, 0x94, 0x26, 0xe9, 0x25, 0xe7, 0xe7, 0xea, 0xa7, 0xe7, 0xa7, 0xe7, 0xeb, 0x83, 0x95,
	0x24, 0x95, 0xa6, 0x81, 0x79, 0x60, 0x0e, 0x98, 0x05, 0xd1, 0xaa, 0x35, 0x81, 0x91, 0x8b, 0xcb,
	0x05, 0x6a, 0xa0, 0xa7, 0x8b, 0x10, 0x2f, 0x17, 0x67, 0x6a, 0x49, 0x72, 0x4a, 0x7c, 0x7c, 0x49,
	0x66, 0x81, 0x00, 0x83, 0x10, 0x1f, 0x17, 0x17, 0x84, 0x5b, 0x66, 0x1c, 0x6f, 0x24, 0xc0, 0x88,
	0xc2, 0x37, 0x16, 0x60, 0x12, 0x92, 0xe2, 0x12, 0xab, 0xca, 0xcf, 0xcf, 0x4e, 0x4d, 0x2d, 0x48,
	0x2d, 0x8a, 0x8f, 0x2f, 0x32, 0x8e, 0x37, 0x8d, 0x37, 0x8e, 0x4f, 0x4a, 0x2d, 0x49, 0x14, 0x48,
	0x11, 0x12, 0xe6, 0xe2, 0x4b, 0xce, 0xcf, 0x2b, 0x2e, 0xcd, 0x89, 0x8f, 0x2f, 0x33, 0x88, 0xb7,
	0x88, 0x37, 0x11, 0x38, 0xc1, 0x28, 0x24, 0xc0, 0xc5, 0x5d, 0x05, 0x31, 0x01, 0xac, 0x6a, 0x0d,
	0x13, 0x48, 0x24, 0x19, 0x49, 0x64, 0x02, 0xb3, 0x93, 0xc8, 0x89, 0x87, 0x72, 0x0c, 0x27, 0x1e,
	0xc9, 0x31, 0x5e, 0x78, 0x24, 0xc7, 0xf8, 0xe0, 0x91, 0x1c, 0xe3, 0x8c, 0xc7, 0x72, 0x0c, 0x49,
	0x6c, 0x60, 0xf7, 0x1a, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x37, 0xed, 0xbb, 0xeb, 0x0a, 0x01,
	0x00, 0x00,
}
